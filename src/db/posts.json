{"post-11":{"data":{"title":"npm(一) npm模块开发与发布","date":"2021-01-28T09:33:07.000Z","tags":"npm"},"content":"<a id=\"一、创建目录、初始化、开发模块、发布模块\"><h2>一、创建目录、初始化、开发模块、发布模块</h2></a>\n<a id=\"一、创建一个目录\"><h4>一、创建一个目录</h4></a>\n<a id=\"二、在目录下执行 npm init (默认已安装node环境)\"><h4>二、在目录下执行 <code>npm init</code> (默认已安装node环境)</h4></a>\n<pre class='hljs'><code class=\"language-bash\">D:<span class=\"hljs-symbol\">\\t</span>ongruixun<span class=\"hljs-symbol\">\\G</span>ithubRepository<span class=\"hljs-symbol\">\\t</span>rx-util&gt;npm init\n</code></pre>\n<!--more-->\n\n<a id=\"三、创建index.js\"><h4>三、创建<code>index.js</code></h4></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-regexp\">//</span> 声明一个函数\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-keyword\">func</span>() {\n    <span class=\"hljs-regexp\">//</span> dosomething...\n}\n\n<span class=\"hljs-regexp\">//</span> 导出模块   \nmodule.exports.<span class=\"hljs-keyword\">func</span> = <span class=\"hljs-keyword\">func</span>;\n</code></pre>\n<a id=\"四、发布到npm\"><h4>四、发布到npm</h4></a>\n<p>到<code>https://www.npmjs.com</code>注册账号,记住自己的账号，密码，邮箱。</p>\n<pre class='hljs'><code class=\"language-bash\"><span class=\"hljs-comment\">// 登录  本地模块文件</span>\n<span class=\"hljs-attribute\">D</span>:\\tongruixun\\GithubRepository\\trx-util&gt;npm adduser\n<span class=\"hljs-attribute\">Username</span>: tongruixun\n<span class=\"hljs-attribute\">Password</span>:\n<span class=\"hljs-attribute\">Email</span>: (this IS public) <span class=\"hljs-number\">1</span>*****<span class=\"hljs-number\">4342</span><span class=\"hljs-variable\">@qq</span>.com\nLogged in as tongruixun on <span class=\"hljs-attribute\">https</span>:<span class=\"hljs-comment\">//registry.npmjs.org/.</span>\n\n<span class=\"hljs-comment\">// 查看登录用户</span>\n<span class=\"hljs-attribute\">D</span>:\\tongruixun\\GithubRepository\\trx-util&gt;npm whoami\ntongruixun\n\n<span class=\"hljs-comment\">// 发布模块到npm</span>\n<span class=\"hljs-attribute\">D</span>:\\tongruixun\\GithubRepository\\trx-util&gt;npm publish\n\n</code></pre>\n<a id=\"五、更新npm模块版本\"><h4>五、更新npm模块版本</h4></a>\n<p>在<code>package.json</code>中修改version字段，然后执行 <code>npm publish</code></p>\n<p>版本号没有修改的话会报错</p>\n<p>版本格式：主版本号.次版本号.修订号，版本号递增规则如下：</p>\n<ul>\n<li>主版本号：当你做了不兼容的 API 修改</li>\n<li>次版本号：当你做了向下兼容的功能性新增</li>\n<li>修订号：当你做了向下兼容的问题修正</li>\n</ul>\n<a id=\"二、使用\"><h2>二、使用</h2></a>\n<a id=\"一、安装\"><h4>一、安装</h4></a>\n<pre class='hljs'><code class=\"language-bash\">npm <span class=\"hljs-keyword\">install</span> trx-util\n</code></pre>\n<a id=\"二、使用\"><h4>二、使用</h4></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> trxUtil = requier(<span class=\"hljs-string\">&#x27;trx-util&#x27;</span>)<span class=\"hljs-comment\">;</span>\n\ntrxUtil.<span class=\"hljs-keyword\">func</span>()<span class=\"hljs-comment\">;</span>\n</code></pre>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、创建目录、初始化、开发模块、发布模块","level":2},{"label":"一、创建一个目录","level":4},{"label":"二、在目录下执行 npm init (默认已安装node环境)","level":4},{"label":"三、创建index.js","level":4},{"label":"四、发布到npm","level":4},{"label":"五、更新npm模块版本","level":4},{"label":"二、使用","level":2},{"label":"一、安装","level":4},{"label":"二、使用","level":4}],"id":"post-11"},"post-17":{"data":{"title":"webpack(一) 安装与使用","date":"2021-01-27T10:56:30.000Z","tags":"webpack"},"content":"<a id=\"一、安装\"><h2>一、安装</h2></a>\n<pre class='hljs'><code class=\"language-bash\"> npm install webpack webpack-cli --<span class=\"hljs-built_in\">save</span>-<span class=\"hljs-built_in\">dev</span>\n</code></pre>\n<a id=\"二、基本配置\"><h2>二、基本配置</h2></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>);\n<span class=\"hljs-keyword\">const</span> HtmlWebpackPlugin = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;html-webpack-plugin&#x27;</span>)\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n    <span class=\"hljs-attr\">entry</span>: <span class=\"hljs-string\">&#x27;./src/index.js&#x27;</span>,\n    <span class=\"hljs-attr\">output</span>: {\n        <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-string\">&#x27;main.js&#x27;</span>,\n        <span class=\"hljs-attr\">path</span>: path.resolve(__dirname, <span class=\"hljs-string\">&#x27;public&#x27;</span>)\n    },\n    <span class=\"hljs-attr\">module</span>: {\n      <span class=\"hljs-attr\">rules</span>: [\n          {\n              <span class=\"hljs-attr\">test</span>: <span class=\"hljs-regexp\">/\\.css$/i</span>,\n              use: [<span class=\"hljs-string\">&#x27;style-loader&#x27;</span>, <span class=\"hljs-string\">&#x27;css-loader&#x27;</span>]\n          },{\n              <span class=\"hljs-attr\">test</span>: <span class=\"hljs-regexp\">/(\\.js?|\\.jsx?)$/i</span>, <span class=\"hljs-comment\">// 排除JSON文件</span>\n              use: <span class=\"hljs-string\">&#x27;babel-loader&#x27;</span>,\n              <span class=\"hljs-attr\">exclude</span>: <span class=\"hljs-regexp\">/node_modules/</span>,\n          },\n      ]\n    },\n    <span class=\"hljs-attr\">plugins</span>: [\n        <span class=\"hljs-keyword\">new</span> HtmlWebpackPlugin({\n            <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">&quot;src/index.html&quot;</span>  <span class=\"hljs-comment\">// 以src下的HTML为模板创建打包后的index.html</span>\n        })\n    ],\n    <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">&quot;development&quot;</span>\n}\n</code></pre>\n<a id=\"问题及解决方案\"><h2>问题及解决方案</h2></a>\n<a id=\"一、 报错信息 Module not found: Error: Can't resolve 'fs' in 'D:\\tongruixun\\GithubRepository\\toy\"><h4>一、 报错信息 <code>Module not found: Error: Can&#39;t resolve &#39;fs&#39; in &#39;D:\\tongruixun\\GithubRepository\\toy</code></h4></a>\n<p>webpack5解决方案</p>\n<pre class='hljs'><code class=\"language-javascript\">  const <span class=\"hljs-built_in\">path</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>);\n  \n  <span class=\"hljs-built_in\">module</span>.exports = {\n      entry: <span class=\"hljs-string\">&#x27;./index.js&#x27;</span>,\n      <span class=\"hljs-built_in\">output</span>: {\n          filename: <span class=\"hljs-string\">&#x27;main.js&#x27;</span>,\n          <span class=\"hljs-built_in\">path</span>: <span class=\"hljs-built_in\">path</span>.resolve(__dirname, <span class=\"hljs-string\">&#x27;public&#x27;</span>)\n      },\n      // 增加这个配置  webpack5\n      resolve: {\n          fallback: {\n              fs: <span class=\"hljs-literal\">false</span>\n          }\n      },\n      mode: <span class=\"hljs-string\">&quot;development&quot;</span>\n  }\n</code></pre>\n<a id=\"参考链接\"><h2>参考链接</h2></a>\n<blockquote>\n<p><a href=\"https://webpack.docschina.org/guides/output-management/#setting-up-htmlwebpackplugin\">https://webpack.docschina.org/guides/output-management/#setting-up-htmlwebpackplugin</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、安装","level":2},{"label":"二、基本配置","level":2},{"label":"问题及解决方案","level":2},{"label":"一、 报错信息 Module not found: Error: Can't resolve 'fs' in 'D:\\tongruixun\\GithubRepository\\toy","level":4},{"label":"参考链接","level":2}],"id":"post-17"},"post-10":{"data":{"title":"node(fs) 文件系统API","date":"2021-01-27T10:07:55.000Z","tags":"node"},"content":"<a id=\"一、目录操作\"><h2>一、目录操作</h2></a>\n<a id=\"一、读取目录\"><h4>一、读取目录</h4></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-regexp\">//</span> 引入fs模块\nconst fs = require(<span class=\"hljs-string\">&#x27;fs&#x27;</span>);\n<span class=\"hljs-regexp\">//</span> 同步读取目录下的文件，返回文件数组列表 元素是文件名和文件类型对的组合 文件名.文件类型\n<span class=\"hljs-regexp\">//</span> __dirname  当前模块的目录名\nconst files = fs.readdirSync(__dirname + <span class=\"hljs-string\">&#x27;/source/_posts&#x27;</span>);\n</code></pre>\n<!--more-->\n\n<a id=\"二、文件操作\"><h2>二、文件操作</h2></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> fs = require(<span class=\"hljs-string\">&#x27;fs&#x27;</span>);\n<span class=\"hljs-comment\">// </span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">file</span> = fs.readFileSync(__dirname + <span class=\"hljs-string\">&#x27;/source/_posts/&#x27;</span> + files[<span class=\"hljs-number\">2</span>]);\n</code></pre>\n<a id=\"参考链接\"><h2>参考链接</h2></a>\n<blockquote>\n<p><a href=\"http://nodejs.cn/api/fs.html#fs_fs_readfile_path_options_callback\">http://nodejs.cn/api/fs.html#fs_fs_readfile_path_options_callback</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、目录操作","level":2},{"label":"一、读取目录","level":4},{"label":"二、文件操作","level":2},{"label":"参考链接","level":2}],"id":"post-10"},"post-16":{"data":{"title":"自定义博客","date":"2021-01-27T08:52:40.000Z","tags":"blog"},"content":"<a id=\"一、创建项目\"><h2>一、创建项目</h2></a>\n<a id=\"二、解析markdown\"><h2>二、解析markdown</h2></a>\n<p>使用<code>marked</code>解析markdown</p>\n<!--more-->\n<a id=\"一、安装\"><h4>一、安装</h4></a>\n<pre class='hljs'><code class=\"language-bash\">npm <span class=\"hljs-keyword\">install</span> marked\n</code></pre>\n<a id=\"二、用法\"><h4>二、用法</h4></a>\n<p>一、基本用法</p>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-comment\">// 引入  在node环境下测试  需使用commonjs模块</span>\n<span class=\"hljs-keyword\">const</span> marked = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;marked&#x27;</span>);\n<span class=\"hljs-keyword\">const</span> src = <span class=\"hljs-string\">&#x27;# Marked in the browser\\n\\nRendered by **marked**.&#x27;</span>\n<span class=\"hljs-comment\">// src 是符合markdown语法的字符串</span>\n<span class=\"hljs-comment\">// 会解析成HTML格式</span>\n<span class=\"hljs-built_in\">console</span>.log(marked(src));\n</code></pre>\n<p>二、代码块高亮\n1、安装<code>highlight.js</code></p>\n<pre class='hljs'><code class=\"language-bash\">npm <span class=\"hljs-keyword\">install</span> highlight.js\n</code></pre>\n<p>2、用法</p>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> marked <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;marked&#x27;</span>;\n<span class=\"hljs-comment\">// 引入</span>\n<span class=\"hljs-keyword\">import</span> hljs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;highlight.js&#x27;</span>;\n<span class=\"hljs-comment\">// 需要引入样式，否则会没有效果</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;highlight.js/styles/atom-one-dark.css&#x27;</span>;\n\n<span class=\"hljs-comment\">// 基本设置</span>\nmarked.setOptions({\n    <span class=\"hljs-comment\">// 在此处使用</span>\n    <span class=\"hljs-attr\">highlight</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">code</span>) </span>{\n        <span class=\"hljs-keyword\">return</span> hljs.highlightAuto(code).value;\n    },\n    <span class=\"hljs-attr\">pedantic</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">gfm</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">tables</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">breaks</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">sanitize</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">smartLists</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">smartypants</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">xhtml</span>: <span class=\"hljs-literal\">false</span>\n});\n\n<span class=\"hljs-comment\">// 将&lt;pre&gt; 替换成 &lt;pre class=&#x27;hljs&#x27;&gt;  为pre标签加上类名hljs  显示代码块背景</span>\n<span class=\"hljs-built_in\">document</span>.body.innerHTML = marked(data.post).replace(<span class=\"hljs-regexp\">/&lt;pre&gt;/g</span>, <span class=\"hljs-string\">&quot;&lt;pre class=&#x27;hljs&#x27;&gt;&quot;</span>);\n</code></pre>\n<a id=\"三、解析yaml\"><h2>三、解析yaml</h2></a>\n<a id=\"一、安装js-yaml\"><h4>一、安装<code>js-yaml</code></h4></a>\n<pre class='hljs'><code class=\"language-bash\">npm <span class=\"hljs-keyword\">install</span> js-yaml\n</code></pre>\n<a id=\"二、使用\"><h4>二、使用</h4></a>\n<p>1、解析yaml格式的内容</p>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> yaml = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;js-yaml&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> fs   = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>);\n\n<span class=\"hljs-keyword\">try</span> {\n  <span class=\"hljs-keyword\">var</span> doc = yaml.load(\n    fs.readFileSync(<span class=\"hljs-string\">&#x27;./example.yml&#x27;</span>, <span class=\"hljs-string\">&#x27;utf8&#x27;</span>)\n  );\n  <span class=\"hljs-built_in\">console</span>.log(doc);\n} <span class=\"hljs-keyword\">catch</span> (e) {\n  <span class=\"hljs-built_in\">console</span>.log(e);\n}\n</code></pre>\n<p>2、从 JavaScript 对象还原到 yaml 文件的代码如下。</p>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> yaml = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;js-yaml&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> fs   = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>);\n\n<span class=\"hljs-keyword\">var</span> obj = {\n  <span class=\"hljs-attr\">fn</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> },\n  <span class=\"hljs-attr\">reg</span>: <span class=\"hljs-regexp\">/test/</span>\n};\n\n<span class=\"hljs-keyword\">try</span> {\n  fs.writeFileSync(\n    <span class=\"hljs-string\">&#x27;./example.yml&#x27;</span>,\n    yaml.dump(obj),\n    <span class=\"hljs-string\">&#x27;utf8&#x27;</span>\n  );\n} <span class=\"hljs-keyword\">catch</span> (e) {\n  <span class=\"hljs-built_in\">console</span>.log(e);\n}\n</code></pre>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、创建项目","level":2},{"label":"二、解析markdown","level":2},{"label":"一、安装","level":4},{"label":"二、用法","level":4},{"label":"三、解析yaml","level":2},{"label":"一、安装js-yaml","level":4},{"label":"二、使用","level":4}],"id":"post-16"},"post-3":{"data":{"title":"git(一) 远程仓库","date":"2021-01-26T10:26:58.000Z","tags":"git"},"content":"<a id=\"一、生成SSH密钥\"><h2>一、生成SSH密钥</h2></a>\n<a id=\"一、输入下面的git命令，生成SSH秘钥\"><h4>一、输入下面的git命令，生成SSH秘钥</h4></a>\n<pre class='hljs'><code class=\"language-bash\">ssh-keygen -<span class=\"hljs-built_in\">t</span> rsa -C <span class=\"hljs-string\">&quot;youremail@example.com&quot;</span>\n</code></pre>\n<p>找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>\n<p>linux   生成在路径 /root/.ssh/id_rsa.pub  文件中\nwindows 生成在路径 C:\\Users\\admin.ssh\\id_rsa.pub 文件中</p>\n<!--more-->\n\n<a id=\"二、找到github或gitee  SSH keys 页面，将id_ras.pub中的内容添加到key中\"><h4>二、找到github或gitee  SSH keys 页面，将<code>id_ras.pub</code>中的内容添加到key中</h4></a>\n<a id=\"三、解决配置ssh公钥后，每次都要输入用户名和密码\"><h4>三、解决配置ssh公钥后，每次都要输入用户名和密码</h4></a>\n<pre class='hljs'><code class=\"language-bash\">git config --<span class=\"hljs-keyword\">global</span> credential.helper <span class=\"hljs-keyword\">store</span>\n</code></pre>\n<a id=\"四、将本地仓库与远程仓库进行关联,git push推送到远程仓库\"><h4>四、将本地仓库与远程仓库进行关联,<code>git push</code>推送到远程仓库</h4></a>\n<pre class='hljs'><code class=\"language-bash\"><span class=\"hljs-regexp\">//</span> 本地仓库关联远程仓库\ngit remote add origin https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/tongruixun/</span>trx-hexo.git\n<span class=\"hljs-regexp\">//</span> 本地内容推送到远程仓库\ngit push\n</code></pre>\n<a id=\"五、克隆到本地到本地仓库\"><h4>五、克隆到本地到本地仓库</h4></a>\n<p>如果需要再另一台电脑上或另一个文件夹中克隆项目</p>\n<pre class='hljs'><code class=\"language-bash\">git clone https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/tongruixun/</span>trx-hexo.git\n</code></pre>\n<a id=\"六、git错误\"><h4>六、git错误</h4></a>\n<p>一、<code>error: failed to push some refs to &#39;https://github.com/tongruixun/trx-util.git</code>\n问题原因: 远程库与本地库不一致造成的</p>\n<p>执行 <code>git pull --rebase origin master</code></p>\n<p>该命令的意思是把远程库中的更新合并到（pull=fetch+merge）本地库中，–-rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/dietime1943/article/details/85682688\">https://blog.csdn.net/dietime1943/article/details/85682688</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、生成SSH密钥","level":2},{"label":"一、输入下面的git命令，生成SSH秘钥","level":4},{"label":"二、找到github或gitee  SSH keys 页面，将id_ras.pub中的内容添加到key中","level":4},{"label":"三、解决配置ssh公钥后，每次都要输入用户名和密码","level":4},{"label":"四、将本地仓库与远程仓库进行关联,git push推送到远程仓库","level":4},{"label":"五、克隆到本地到本地仓库","level":4},{"label":"六、git错误","level":4}],"id":"post-3"},"post-13":{"data":{"title":"学习网站","date":"2021-01-24T17:09:01.000Z","tags":"自学"},"content":"<a id=\"前端\"><h2>前端</h2></a>\n<a id=\"JAVASCRIPT\"><h4>JAVASCRIPT</h4></a>\n<p>一、 JavaScript教程</p>\n<blockquote>\n<p><a href=\"https://wangdoc.com/javascript/\">https://wangdoc.com/javascript/</a></p>\n</blockquote>\n<p>二、ECMAScript 6 入门</p>\n<blockquote>\n<p><a href=\"https://es6.ruanyifeng.com/#docs/set-map\">https://es6.ruanyifeng.com/#docs/set-map</a></p>\n</blockquote>\n<p>三、JavaScript中文网</p>\n<blockquote>\n<p><a href=\"https://www.javascriptcn.com/\">https://www.javascriptcn.com/</a></p>\n</blockquote>\n<!--more-->\n\n<a id=\"博客网站\"><h4>博客网站</h4></a>\n<p>一、张鑫旭的个人主页</p>\n<blockquote>\n<p><a href=\"https://www.zhangxinxu.com/\">https://www.zhangxinxu.com/</a></p>\n</blockquote>\n<p>二、廖雪峰的官方网站</p>\n<blockquote>\n<p><a href=\"https://www.liaoxuefeng.com/\">https://www.liaoxuefeng.com/</a></p>\n</blockquote>\n<a id=\"前端工具\"><h4>前端工具</h4></a>\n<p>一、 颜色类\n1、 中国色</p>\n<blockquote>\n<p><a href=\"http://zhongguose.com/\">http://zhongguose.com/</a></p>\n</blockquote>\n<p>2、 web安全色</p>\n<blockquote>\n<p><a href=\"https://www.bootcss.com/p/websafecolors/\">https://www.bootcss.com/p/websafecolors/</a></p>\n</blockquote>\n<p>3、渐变配色</p>\n<blockquote>\n<p><a href=\"https://uigradients.com/#Atlas\">https://uigradients.com/#Atlas</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"前端","level":2},{"label":"JAVASCRIPT","level":4},{"label":"博客网站","level":4},{"label":"前端工具","level":4}],"id":"post-13"},"post-2":{"data":{"title":"CSS(二) 动画","date":"2021-01-24T16:48:26.000Z","tags":"css"},"content":"<a id=\"一、CSS动画API\"><h2>一、CSS动画API</h2></a>\n<!--more-->\n<a id=\"二、示例动画\"><h2>二、示例动画</h2></a>\n<a id=\"一、波纹动画\"><h4>一、波纹动画</h4></a>\n<pre class='hljs'><code class=\"language-css\"><span class=\"hljs-selector-class\">.dot</span> {\n  <span class=\"hljs-attribute\">position</span>: relative;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0.8em</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">50%</span>;\n\n  &amp;<span class=\"hljs-selector-pseudo\">::before</span> {\n      <span class=\"hljs-attribute\">position</span>: absolute;\n      <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>;\n      <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n      <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n      <span class=\"hljs-attribute\">background</span>: inherit;\n      <span class=\"hljs-attribute\">border-radius</span>: inherit;\n      <span class=\"hljs-attribute\">animation</span>: wave <span class=\"hljs-number\">2s</span> ease-out infinite;\n  }\n\n}\n\n<span class=\"hljs-keyword\">@keyframes</span> wave {\n  50%,\n  75% {\n    <span class=\"hljs-attribute\">transform</span>: scale(<span class=\"hljs-number\">2.5</span>);\n    \n  }\n  \n  80%,\n  100% {\n    <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n  }\n}\n</code></pre>\n<a id=\"参考链接\"><h2>参考链接</h2></a>\n<blockquote>\n<p><a href=\"https://juejin.cn/post/6844904033405108232\">https://juejin.cn/post/6844904033405108232</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、CSS动画API","level":2},{"label":"二、示例动画","level":2},{"label":"一、波纹动画","level":4},{"label":"参考链接","level":2}],"id":"post-2"},"post-8":{"data":{"title":"Hexo(三) 添加动态模型插件","date":"2021-01-23T09:24:54.000Z","tags":"hexo","categories":"博客搭建"},"content":"<meta name=\"referrer\" content=\"no-referrer\" />\n\n<a id=\"一、安装模块\"><h2>一、安装模块</h2></a>\n<pre class='hljs'><code>npm install <span class=\"hljs-comment\">--save hexo-helper-live2d</span>\n</code></pre>\n<a id=\"二·、下载模型\"><h2>二·、下载模型</h2></a>\n<p>使用 <code>npm install {packagename}</code> 安装模型</p>\n<pre class='hljs'><code><span class=\"hljs-regexp\">//</span> 我使用的是 hijiki 一只黑色小猫\nnpm install live2d-widget-model-hijiki\n</code></pre>\n<p>模型仓库</p>\n<blockquote>\n<p><a href=\"https://github.com/xiazeyu/live2d-widget-models\">https://github.com/xiazeyu/live2d-widget-models</a></p>\n</blockquote>\n<!--more-->\n<a id=\"三、添加配置\"><h2>三、添加配置</h2></a>\n<pre class='hljs'><code class=\"language-yml\">\n<span class=\"hljs-comment\"># Live2D</span>\n<span class=\"hljs-comment\">## https://github.com/EYHN/hexo-helper-live2d</span>\n<span class=\"hljs-comment\">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span>\n<span class=\"hljs-attr\">live2d:</span>\n  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-comment\">#enable: false</span>\n  <span class=\"hljs-attr\">scriptFrom:</span> <span class=\"hljs-string\">local</span> <span class=\"hljs-comment\"># 默认</span>\n  <span class=\"hljs-attr\">pluginRootPath:</span> <span class=\"hljs-string\">live2dw/</span> <span class=\"hljs-comment\"># 插件在站点上的根目录(相对路径)</span>\n  <span class=\"hljs-attr\">pluginJsPath:</span> <span class=\"hljs-string\">lib/</span> <span class=\"hljs-comment\"># 脚本文件相对与插件根目录路径</span>\n  <span class=\"hljs-attr\">pluginModelPath:</span> <span class=\"hljs-string\">assets/</span> <span class=\"hljs-comment\"># 模型文件相对与插件根目录路径</span>\n  <span class=\"hljs-comment\"># scriptFrom: jsdelivr # jsdelivr CDN</span>\n  <span class=\"hljs-comment\"># scriptFrom: unpkg # unpkg CDN</span>\n  <span class=\"hljs-comment\"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span>\n  <span class=\"hljs-attr\">tagMode:</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>\n  <span class=\"hljs-attr\">debug:</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\"># 调试, 是否在控制台输出日志</span>\n  <span class=\"hljs-attr\">model:</span>\n    <span class=\"hljs-attr\">use:</span> <span class=\"hljs-string\">live2d-widget-model-hibiki</span>\n    <span class=\"hljs-comment\"># use: live2d-widget-model-wanko # npm-module package name</span>\n    <span class=\"hljs-comment\"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span>\n    <span class=\"hljs-comment\"># use: ./wives/wanko # 相对于博客根目录的路径</span>\n    <span class=\"hljs-comment\"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span>\n  <span class=\"hljs-attr\">display:</span>\n    <span class=\"hljs-attr\">position:</span> <span class=\"hljs-string\">right</span>\n    <span class=\"hljs-attr\">width:</span> <span class=\"hljs-number\">145</span>\n    <span class=\"hljs-attr\">height:</span> <span class=\"hljs-number\">315</span>\n  <span class=\"hljs-attr\">mobile:</span>\n    <span class=\"hljs-attr\">show:</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># 是否在移动设备上显示</span>\n    <span class=\"hljs-attr\">scale:</span> <span class=\"hljs-number\">0.5</span> <span class=\"hljs-comment\"># 移动设备上的缩放       </span>\n  <span class=\"hljs-attr\">react:</span>\n    <span class=\"hljs-attr\">opacityDefault:</span> <span class=\"hljs-number\">0.7</span>\n    <span class=\"hljs-attr\">opacityOnHover:</span> <span class=\"hljs-number\">0.8</span>\n</code></pre>\n<a id=\"四、部分模型展示\"><h2>四、部分模型展示</h2></a>\n<p>Epsilon\n<img src=\"https://gitee.com/tongruixun/trx-imgs/raw/master/hexo/live2d-widget-model/51hexo.png\" alt=\"\"></p>\n<p>shizuku\n<img src=\"https://gitee.com/tongruixun/trx-imgs/raw/master/hexo/live2d-widget-model/53hexo.png\" alt=\"\"></p>\n<p>z16\n<img src=\"https://gitee.com/tongruixun/trx-imgs/raw/master/hexo/live2d-widget-model/56hexo.png\" alt=\"\"></p>\n<p>hibiki\n<img src=\"https://gitee.com/tongruixun/trx-imgs/raw/master/hexo/live2d-widget-model/57hexo.png\" alt=\"\"></p>\n<p>koharu\n<img src=\"https://gitee.com/tongruixun/trx-imgs/raw/master/hexo/live2d-widget-model/58hexo.png\" alt=\"\"></p>\n<p>hijiki\n<img src=\"https://gitee.com/tongruixun/trx-imgs/raw/master/hexo/live2d-widget-model/ia_100000062.gif\" alt=\"\"></p>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、安装模块","level":2},{"label":"二·、下载模型","level":2},{"label":"三、添加配置","level":2},{"label":"四、部分模型展示","level":2}],"id":"post-8"},"post-1":{"data":{"title":"CSS(一) 选择器","date":"2021-01-21T16:30:58.000Z","tags":"css"},"content":"<a id=\"一、基本选择器\"><h2>一、基本选择器</h2></a>\n<a id=\"二、组合选择器\"><h2>二、组合选择器</h2></a>\n<ul>\n<li>相邻兄弟选择器 <code>A + B</code></li>\n<li>普通兄弟选择器 <code>A ~ B</code></li>\n<li>子选择器 <code>A &gt; B</code></li>\n<li>后代选择器 <code>A B</code></li>\n</ul>\n<a id=\"三、伪类\"><h2>三、伪类</h2></a>\n<a id=\"四、伪元素\"><h2>四、伪元素</h2></a>\n<ul>\n<li><code>::after (:after)</code> 用来创建一个伪元素，作为已选中元素的最后一个子元素,默认是行内元素</li>\n<li><code>::before (:before)</code> 创建一个伪元素，其将成为匹配选中的元素的第一个子元素,默认是行内元素</li>\n</ul>\n<blockquote>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference#%E9%80%89%E6%8B%A9%E5%99%A8\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference#%E9%80%89%E6%8B%A9%E5%99%A8</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、基本选择器","level":2},{"label":"二、组合选择器","level":2},{"label":"三、伪类","level":2},{"label":"四、伪元素","level":2}],"id":"post-1"},"post-0":{"data":{"title":"微信小程序开发 常用API汇总","date":"2021-01-19T15:09:23.000Z","tags":"微信小程序"},"content":"<a id=\"微信小程序登录\"><h2>微信小程序登录</h2></a>\n<a id=\"一、检查登录态 wx.checkSession(Object object)\"><h4>一、检查登录态 <code>wx.checkSession(Object object)</code></h4></a>\n<p>检查登录态是否过期。 调用 <code>wx.login</code> 会获取新的用户登录态</p>\n<blockquote>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.checkSession.html\">https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.checkSession.html</a></p>\n</blockquote>\n<!--more-->\n\n<a id=\"二、登录 wx.login(Object object) \"><h4>二、登录 <code>wx.login(Object object) </code></h4></a>\n<p>调用登录接口获取登录凭证 (code)。通过凭证进而换取用户登录态信息，包括用户的唯一标识（openid）及本次登录的会话密钥（session_key）等。用户数据的加解密通讯需要依赖会话密钥完成。</p>\n<blockquote>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html\">https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html</a></p>\n</blockquote>\n<a id=\"三、获取当前微信用户信息\"><h4>三、获取当前微信用户信息</h4></a>\n<p>一、使用 <code>&lt;open-data /&gt;</code> 获取用户信息，不需要经过用户授权可以展示开放数据，包括用户的头像，昵称，性别等</p>\n<blockquote>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html\">https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html</a></p>\n</blockquote>\n<p>二、<code>wx.getUserInfo(Object object)</code> 获取用户信息 需要使用 button 来授权登录</p>\n<blockquote>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/button.html\">https://developers.weixin.qq.com/miniprogram/dev/component/button.html</a>\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html\">https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html</a></p>\n</blockquote>\n<a id=\"三、图片与文件\"><h4>三、图片与文件</h4></a>\n<p>一、媒体图片\n1、 <code>wx.choseImage(Object object)</code> 从本地相册或使用相机拍照\n2、 <code>wx.chooseMessageFile(Object object)</code> 从微信的聊天列表中选择文件\n3、 <code>wx.previewImage(Object object, boolean showmenu)</code> 在新页面中全屏预览图片。预览的过程中用户可以进行保存图片、发送给朋友等操作。\n4、 <code>wx.previewMedia(Object object, boolean showmenu)</code> 预览图片和视频</p>\n<blockquote>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.saveImageToPhotosAlbum.html\">https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.saveImageToPhotosAlbum.html</a></p>\n</blockquote>\n<p>二、 文件管理器</p>\n<blockquote>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/file/FileSystemManager.readFile.html\">https://developers.weixin.qq.com/miniprogram/dev/api/file/FileSystemManager.readFile.html</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"微信小程序登录","level":2},{"label":"一、检查登录态 wx.checkSession(Object object)","level":4},{"label":"二、登录 wx.login(Object object) ","level":4},{"label":"三、获取当前微信用户信息","level":4},{"label":"三、图片与文件","level":4}],"id":"post-0"},"post-15":{"data":{"title":"系统分析师(二)绪论","date":"2021-01-17T14:34:23.000Z","tags":"系统分析师"},"content":"<a id=\"信息与信息系统\"><h2>信息与信息系统</h2></a>\n<a id=\"一、基本概念\"><h4>一、基本概念</h4></a>\n<pre class='hljs'><code class=\"language-mermaid\">graph BT\n<span class=\"hljs-keyword\">a</span>(信息的特征)\nb[客观性]<span class=\"hljs-comment\">--&gt;a</span>\nc[普遍性]<span class=\"hljs-comment\">--&gt;a</span>\nd[无限性]<span class=\"hljs-comment\">--&gt;a</span>\ne[动态性]<span class=\"hljs-comment\">--&gt;a</span>\nf[相对性]<span class=\"hljs-comment\">--&gt;a</span>\ng[依附性]<span class=\"hljs-comment\">--&gt;a</span>\nh[变换性]<span class=\"hljs-comment\">--&gt;a</span>\ni[传递性]<span class=\"hljs-comment\">--&gt;a</span>\nj[层次性]<span class=\"hljs-comment\">--&gt;a</span>\nk[系统性]<span class=\"hljs-comment\">--&gt;a</span>\nl[转化性]<span class=\"hljs-comment\">--&gt;a</span>\n</code></pre>\n<!--more-->\n<pre class='hljs'><code class=\"language-mermaid\">graph BT\n<span class=\"hljs-keyword\">a</span>(信息的功能)\nb[为认识世界提供依据]<span class=\"hljs-comment\">--&gt;a</span>\nc[为改造世界提供指导]<span class=\"hljs-comment\">--&gt;a</span>\nd[为有序的建立提供保证]<span class=\"hljs-comment\">--&gt;a</span>\ne[为资源开发提供条件]<span class=\"hljs-comment\">--&gt;a</span>\nf[为知识的生产提供材料]<span class=\"hljs-comment\">--&gt;a</span>\n</code></pre>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"信息与信息系统","level":2},{"label":"一、基本概念","level":4}],"id":"post-15"},"post-7":{"data":{"title":"Hexo(三) yilia主题添加分类页面","date":"2021-01-17T12:33:49.000Z","tags":["hexo","yilia"],"categories":["博客搭建"]},"content":"<a id=\"一、分类页面\"><h2>一、分类页面</h2></a>\n<p>根目录运行<code>hexo new page categories</code>, 会新建一个页面，将用作为分类展示页面。会在<code>\\source\\categories\\index.md</code> 生成文件</p>\n<pre class='hljs'><code><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">分类</span>\n<span class=\"hljs-attr\">date:</span> <span class=\"hljs-number\">2021-01-17 12:33:49</span>\n<span class=\"hljs-attr\">toc:</span> <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-attr\">comment:</span> <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-attr\">layout:</span> <span class=\"hljs-string\">categories</span>\n<span class=\"hljs-meta\">---</span>\n</code></pre>\n<!--more-->\n<a id=\"二、新建一个布局文件\"><h2>二、新建一个布局文件</h2></a>\n<p>在主题路径下  <code>\\themes\\yilia\\layout\\</code>  新建<code>categories.ejs</code>, 内容如下</p>\n<pre class='hljs'><code>&lt;article <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;article&quot;</span>&gt;\n  &lt;h3 <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;category-count&quot;</span>&gt;共计 &lt;%= site.categories.<span class=\"hljs-built_in\">length</span> %&gt; 个分类, &lt;%= site.tags.<span class=\"hljs-built_in\">length</span> %&gt; 个标签&lt;/h3&gt;\n  &lt;% <span class=\"hljs-keyword\">if</span> (site.categories.<span class=\"hljs-built_in\">length</span>){ %&gt;\n  &lt;ul <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;category-list&quot;</span>&gt;\n    &lt;% site.categories.sort(&#x27;<span class=\"hljs-built_in\">name</span>&#x27;).each(function(<span class=\"hljs-built_in\">item</span>){ %&gt;\n      &lt;% <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">item</span>.posts.<span class=\"hljs-built_in\">length</span>){ %&gt;\n        &lt;li <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;category-list-item&quot;</span>&gt;\n          &lt;a href=<span class=\"hljs-string\">&quot;&lt;%- config.root %&gt;&lt;%- item.path %&gt;&quot;</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;category-list-link&quot;</span> title=<span class=\"hljs-string\">&quot;&lt;%= item.name %&gt;&quot;</span>&gt;\n            &lt;%= <span class=\"hljs-built_in\">item</span>.<span class=\"hljs-built_in\">name</span> %&gt;\n            &lt;span <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;category-list-count&quot;</span>&gt;&lt;%= <span class=\"hljs-built_in\">item</span>.posts.<span class=\"hljs-built_in\">length</span> %&gt;&lt;/span&gt;\n          &lt;/a&gt;\n        &lt;/li&gt;\n      &lt;% } %&gt;\n    &lt;% }) %&gt;\n  &lt;/ul&gt;\n  &lt;% } %&gt;\n  &lt;<span class=\"hljs-keyword\">div</span> <span class=\"hljs-built_in\">class</span>=<span class=\"hljs-string\">&quot;tag-cloud&quot;</span>&gt;\n    &lt;%- tagcloud({\n      min_font: <span class=\"hljs-number\">20</span>, \n      max_font: <span class=\"hljs-number\">35</span>, \n      amount: <span class=\"hljs-number\">999</span>\n    }) %&gt;\n  &lt;/<span class=\"hljs-keyword\">div</span>&gt;\n&lt;/article&gt;\n</code></pre>\n<a id=\"三、添加样式\"><h2>三、添加样式</h2></a>\n<p>有能力的话可以根据需求自己修改样式。下面是参考样式， 在<code>\\themes\\yilia\\source\\main.0cf68a.css</code> 中添加。不同主题main.内容不同</p>\n<pre class='hljs'><code>\n<span class=\"hljs-selector-class\">.category-count</span> {\n    <span class=\"hljs-attribute\">text-align</span>:center;\n    <span class=\"hljs-attribute\">line-height</span>:<span class=\"hljs-number\">3</span>;\n    <span class=\"hljs-attribute\">font-size</span>:<span class=\"hljs-number\">18px</span>;\n    <span class=\"hljs-attribute\">font-weight</span>:bold;\n}\n<span class=\"hljs-selector-class\">.category-list</span> {\n    <span class=\"hljs-attribute\">text-align</span>:center;\n    <span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">20px</span>\n}\n<span class=\"hljs-selector-class\">.category-list</span> <span class=\"hljs-selector-tag\">li</span><span class=\"hljs-selector-class\">.category-list-item</span> {\n    <span class=\"hljs-attribute\">display</span>:inline-block;\n    <span class=\"hljs-attribute\">margin</span>:<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1em</span> .<span class=\"hljs-number\">5em</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">4px</span>;\n    <span class=\"hljs-attribute\">border</span>:<span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#aaaaaa</span>;\n    <span class=\"hljs-attribute\">font-size</span>:<span class=\"hljs-number\">1.2rem</span>\n}\n<span class=\"hljs-selector-class\">.category-list</span> <span class=\"hljs-selector-tag\">li</span><span class=\"hljs-selector-class\">.category-list-item</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n    <span class=\"hljs-attribute\">background</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">204</span>,<span class=\"hljs-number\">204</span>,<span class=\"hljs-number\">204</span>,<span class=\"hljs-number\">0.3</span>)\n}\n<span class=\"hljs-selector-class\">.tag-cloud</span> {\n    <span class=\"hljs-attribute\">text-align</span>:center;\n    <span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">20px</span>\n}\n<span class=\"hljs-selector-class\">.tag-cloud</span> <span class=\"hljs-selector-tag\">a</span> {\n    <span class=\"hljs-attribute\">margin</span>:<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">20px</span>;\n    <span class=\"hljs-attribute\">word-break</span>:keep-all;\n    <span class=\"hljs-attribute\">position</span>:relative\n}\n<span class=\"hljs-selector-class\">.tag-cloud</span> <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">::before</span> {\n    <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">left</span>:<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">right</span>:auto\n}\n<span class=\"hljs-selector-class\">.tag-cloud</span> <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">::before</span> {\n    <span class=\"hljs-attribute\">content</span>:<span class=\"hljs-string\">&quot;&quot;</span>;\n    <span class=\"hljs-attribute\">position</span>:absolute;\n    <span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">right</span>:<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">bottom</span>:<span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">2px</span>;\n    <span class=\"hljs-attribute\">background</span>:<span class=\"hljs-number\">#08c</span>;\n    <span class=\"hljs-attribute\">-webkit-transition</span>:width .<span class=\"hljs-number\">3s</span> ease;\n    <span class=\"hljs-attribute\">transition</span>:width .<span class=\"hljs-number\">3s</span> ease\n}\n</code></pre>\n<a id=\"参考资料\"><h2>参考资料</h2></a>\n<blockquote>\n<p><a href=\"https://yansheng836.github.io/article/521a17ae.html\">https://yansheng836.github.io/article/521a17ae.html</a></p>\n</blockquote>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、分类页面","level":2},{"label":"二、新建一个布局文件","level":2},{"label":"三、添加样式","level":2},{"label":"参考资料","level":2}],"id":"post-7"},"post-9":{"data":{"title":"Linux操作命令(一)  文件与目录管理","date":"2021-01-12T15:08:58.000Z","tags":"Linux"},"content":"<a id=\"一、目录的相关操作\"><h2>一、目录的相关操作</h2></a>\n<a id=\"一、特殊目录\"><h4>一、特殊目录</h4></a>\n<pre class='hljs'><code><span class=\"hljs-bullet\">.       </span>代表此层目录\n<span class=\"hljs-bullet\">..      </span>代表上一层目录\n<span class=\"hljs-bullet\">-       </span>代表前一个工作目录\n~       代表目前使用者身份所在的目录\n</code></pre>\n<a id=\"二、处理目录常见命令\"><h4>二、处理目录常见命令</h4></a>\n<pre class='hljs'><code><span class=\"hljs-keyword\">cd</span> :     切换目录(change directory，切换目录)\n<span class=\"hljs-keyword\">pwd</span> :    显示当前目录(<span class=\"hljs-keyword\">Print</span> Working Directory)\n<span class=\"hljs-keyword\">mkdir</span> :  建立一个新目录 [-mp] -<span class=\"hljs-keyword\">m</span> 设置文件的权限。直接设置，不适用默认权限。 -p 帮助你直接将所需要的目录(包含上层目录)递归创建\n<span class=\"hljs-keyword\">rmdir</span> :  删除一个空目录\n</code></pre>\n<!--more-->\n<a id=\"二、文件与目录管理\"><h2>二、文件与目录管理</h2></a>\n<a id=\"一、文件与目录的查看 : ls\"><h4>一、文件与目录的查看 : ls</h4></a>\n<pre class='hljs'><code>ls [-aAdfFhilnrRSt]\nls [<span class=\"hljs-comment\">--color={never,auto,always}]</span>\nls [<span class=\"hljs-comment\">--full-time]</span>\n\n选项与参数\n-a : 全部的文件，连同隐藏的文件(开头为 . 的文件)一起列出来(常用);\n-A : 全部的文件，连同隐藏的文件，但不包括.与..这两个目录；\n-d : 仅列出目录本身，而不是列出目录内的文件数据(常用)\n-f : 直接列出结果，而不进行排序(<span class=\"hljs-type\">ls</span>默认会以文件名排序)；\n-F :\n-<span class=\"hljs-type\">h</span> :\n-<span class=\"hljs-type\">i</span> :\n-<span class=\"hljs-type\">l</span> :\n-<span class=\"hljs-type\">n</span> :\n-<span class=\"hljs-type\">r</span> :\n-<span class=\"hljs-type\">R</span> :\n-<span class=\"hljs-type\">S</span> :\n-<span class=\"hljs-type\">t</span> :\n--<span class=\"hljs-type\">color</span>=never :\n--<span class=\"hljs-type\">color</span>=always :\n--<span class=\"hljs-type\">color</span>=auto :\n--<span class=\"hljs-type\">full</span>-time : \n--<span class=\"hljs-type\">time</span>={atime,ctime}\n</code></pre>\n<a id=\"二、复制、删除与移动: cp、rm、mv\"><h4>二、复制、删除与移动: cp、rm、mv</h4></a>\n<pre class='hljs'><code>cp [-adfilprsu] 源文件(source) 目标文件 (destination)\ncp [options] source1 source2 source3 ... directory\n\n选线与参数\n-a : 相当于 -<span class=\"hljs-type\">dr</span> <span class=\"hljs-comment\">--preserve=all 的意思， 至于dr请参考下列说明(常用);</span>\n-d :\n-<span class=\"hljs-type\">f</span> :\n-<span class=\"hljs-type\">i</span> :\n-<span class=\"hljs-type\">l</span> :\n-<span class=\"hljs-type\">p</span> : 连同文件的属性(权限、用户、时间)一起复制过去，而非使用默认属性(备份常用);\n-r : 递归复制，用于目录的复制操作(常用);\n-s :\n-<span class=\"hljs-type\">u</span> :\n--<span class=\"hljs-type\">preserve</span>=<span class=\"hljs-keyword\">all</span> 除了 -p 的权限参数外，还加入SELinux的属性，links、xattr等也复制;\n// 如果源文件有两个以上，则最后一个目标文件一定要是 “目录” 才行\n</code></pre>\n<a id=\"参考资料\"><h2>参考资料</h2></a>\n<ul>\n<li>《鸟哥的Linxu私房菜基础学习篇·第四版》</li>\n</ul>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、目录的相关操作","level":2},{"label":"一、特殊目录","level":4},{"label":"二、处理目录常见命令","level":4},{"label":"二、文件与目录管理","level":2},{"label":"一、文件与目录的查看 : ls","level":4},{"label":"二、复制、删除与移动: cp、rm、mv","level":4},{"label":"参考资料","level":2}],"id":"post-9"},"post-12":{"data":{"title":"阅读书单(一)","date":"2021-01-11T20:17:13.000Z","tags":"书单"},"content":"<a id=\"前端\"><h4>前端</h4></a>\n<p><strong>JavaScript</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《JaveScript高级程序设计》1  </li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《重构-改善既有代码》1</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《你不知道的JavaScript·上卷》1</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《你不知道的JavaScript·中卷》1</li>\n<li><input disabled=\"\" type=\"checkbox\"> 《你不知道的JavaScript·下卷》</li>\n</ul>\n<!--more-->\n<p><strong>CSS</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《CSS揭秘》1 </li>\n</ul>\n<a id=\"后端\"><h4>后端</h4></a>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《java核心技术卷一 》1      </li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《java核心技术卷二》1    </li>\n<li><input disabled=\"\" type=\"checkbox\"> 《MySql必知必会》</li>\n</ul>\n<a id=\"代码规范\"><h4>代码规范</h4></a>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《重构·改善既有代码》</li>\n</ul>\n<a id=\"系统分析师\"><h4>系统分析师</h4></a>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 《系统分析师教程》</li>\n<li><input disabled=\"\" type=\"checkbox\"> 《系统分析师考试全程指导》</li>\n<li><input disabled=\"\" type=\"checkbox\"> 《系统分析师历年真题解析第2版》</li>\n</ul>\n<a id=\"操作系统\"><h4>操作系统</h4></a>\n<p><strong>Linux</strong></p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 《鸟哥的Linux私房菜基础学习篇·第四版》0.2</li>\n</ul>\n<a id=\"其他\"><h4>其他</h4></a>\n<p><strong>英语</strong></p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 《程序员的英语》 0.05</li>\n<li><input disabled=\"\" type=\"checkbox\"> 《英语词汇速记大全》</li>\n</ul>\n<p><strong>课外</strong></p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《人性的优点》2</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《人性的弱点》1</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 《语言的突破》2</li>\n</ul>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"前端","level":4},{"label":"后端","level":4},{"label":"代码规范","level":4},{"label":"系统分析师","level":4},{"label":"操作系统","level":4},{"label":"其他","level":4}],"id":"post-12"},"post-14":{"data":{"title":"系统分析师(一) 软考流程与备考","date":"2021-01-10T10:44:25.000Z","tags":"系统分析师","categories":"软考"},"content":"<a id=\"一、考试介绍-时间、科目\"><h2>一、考试介绍-时间、科目</h2></a>\n<p><strong>考试时间</strong>  一般为5月底\n<strong>考试标准</strong>  划分数线形式：一般情况所有科目达到45分合格</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">综合知识</th>\n<th align=\"center\">案例分析</th>\n<th align=\"center\">论文写作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">客观题</td>\n<td align=\"center\">主观题</td>\n<td align=\"center\">论文题</td>\n</tr>\n<tr>\n<td align=\"center\">75道</td>\n<td align=\"center\">5道大题(只做3道)</td>\n<td align=\"center\">4道题选做一道</td>\n</tr>\n<tr>\n<td align=\"center\">150分钟</td>\n<td align=\"center\">90分钟</td>\n<td align=\"center\">120分钟</td>\n</tr>\n</tbody></table>\n<!-- more -->\n<a id=\"二、复习策略\"><h2>二、复习策略</h2></a>\n<a id=\"科目一  综合知识\"><h3>科目一  综合知识</h3></a>\n<p>特点：范围广，但考试时间多得让人犯困</p>\n<p><strong>复习策略</strong>\n1、各个击破。\n2、混合练习。\n3、分层做题，不听天由命。</p>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、考试介绍-时间、科目","level":2},{"label":"二、复习策略","level":2},{"label":"科目一  综合知识","level":3}],"id":"post-14"},"post-6":{"data":{"title":"Hexo(二）发表文章常用命令","date":"2021-01-07T20:18:45.000Z","tags":"hexo","categories":"博客搭建"},"content":"<a id=\"文章配置\"><h2>文章配置</h2></a>\n<pre class='hljs'><code>// 配置\ntitle: Hexo(二) 发表文章常用命令\ndate: 2021<span class=\"hljs-string\">-01</span><span class=\"hljs-string\">-07</span> 20:18:45\n<span class=\"hljs-keyword\">tags:</span> Hexo\ncategories: hexo\n\n\n// 属性说明\ntitle: 文章标题\ndate: 文章的创建日期\n<span class=\"hljs-keyword\">tags:</span> 为文章设置标签，方便搜索\n\n  一个标签时\n  tags: 标签名\n\n  多个标签\n  tags: \n  - 标签名一\n  - 标签名二\n\ncategories: 为文章设置分类\n\n  一个分类时\n  categories: 分类名\n\n  子分类时\n  categories: \n  - 父分类名\n  - 子分类名\n</code></pre>\n<!--more-->\n<a id=\"常用命令\"><h2>常用命令</h2></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-regexp\">//</span>新建文章\nhexo new <span class=\"hljs-string\">&quot;postName&quot;</span>\n\n<span class=\"hljs-regexp\">//</span> 新建页面\nhexo new page <span class=\"hljs-string\">&quot;pageName&quot;</span>\n\n<span class=\"hljs-regexp\">//</span>生成静态页面至public目录\nhexo generate\n\n<span class=\"hljs-regexp\">//</span>开启预览访问端口（默认端口<span class=\"hljs-number\">4000</span>，<span class=\"hljs-string\">&#x27;ctrl + c&#x27;</span>关闭server）\nhexo server\n\n<span class=\"hljs-regexp\">//</span>部署到Github\nhexo deploy\n\n<span class=\"hljs-regexp\">//</span>查看帮助\nhexo help\n\n<span class=\"hljs-regexp\">//</span>查看版本\nhexo version\n</code></pre>\n<a id=\"缩写\"><h2>缩写</h2></a>\n<pre class='hljs'><code class=\"language-javascript\">hexo n == hexo <span class=\"hljs-keyword\">new</span>\nhexo g == hexo <span class=\"hljs-keyword\">generate</span>\nhexo s == hexo server\nhexo d == hexo deploy\n</code></pre>\n<a id=\"组合命令\"><h2>组合命令</h2></a>\n<pre class='hljs'><code class=\"language-javascript\"><span class=\"hljs-regexp\">//</span>生成并本地预览\nhexo s -g\n\n<span class=\"hljs-regexp\">//</span> 生成并上传\nhexo d -g\n</code></pre>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"文章配置","level":2},{"label":"常用命令","level":2},{"label":"缩写","level":2},{"label":"组合命令","level":2}],"id":"post-6"},"post-5":{"data":{"title":"Hexo(一) 基于Linux部署个人博客","date":"2021-01-07T20:00:00.000Z","tags":"hexo","categories":"博客搭建"},"content":"<a id=\"一、安装nodejs\"><h2>一、安装nodejs</h2></a>\n<pre class='hljs'><code><span class=\"hljs-regexp\">//</span> 官网下载二进制包的方式安装 node-v14.<span class=\"hljs-number\">15.4</span>-linux-x64.tar.xz\n<span class=\"hljs-regexp\">//</span> 分两层 先解压xz  \n<span class=\"hljs-regexp\">//</span> d 解压文件 \n<span class=\"hljs-regexp\">//</span> k 保留原文件（如果不想保留，可以去掉k）\nxz -dk node-v14.<span class=\"hljs-number\">15.4</span>-linux-x64.tar.xz\n\n<span class=\"hljs-regexp\">//</span> 解压 tar  \n<span class=\"hljs-regexp\">//</span> x 解压文件\n<span class=\"hljs-regexp\">//</span> v 显示解压文件列表\n<span class=\"hljs-regexp\">//</span> f 指定要解压的文件名\n<span class=\"hljs-regexp\">//</span> -C 解压到指定目录\ntar -xvf node-v14.<span class=\"hljs-number\">15.4</span>-linux-x64.tar\n\n<span class=\"hljs-regexp\">//</span>或者一行命令直接解压\ntar -xvf node-v14.<span class=\"hljs-number\">15.1</span>-linux-x64.tar.xz\n\n<span class=\"hljs-regexp\">//</span> Linux 中建立软连接  相当于windows创建快捷方式\n<span class=\"hljs-regexp\">//</span> <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/node/</span>node-v14.<span class=\"hljs-number\">15.4</span>-linux-x64<span class=\"hljs-regexp\">/bin/</span>node  node所在目录\n<span class=\"hljs-regexp\">//</span> <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>node   \nln -s <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/node/</span>node-v14.<span class=\"hljs-number\">15.4</span>-linux-x64<span class=\"hljs-regexp\">/bin/</span>node <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>node\nln -s <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/node/</span>node-v14.<span class=\"hljs-number\">15.4</span>-linux-x64<span class=\"hljs-regexp\">/bin/</span>npm <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>npm\n\n<span class=\"hljs-regexp\">//</span> 淘宝镜像源\nnpm install -g cnpm --registry=https<span class=\"hljs-regexp\">//</span>registry.npm.taobao.org\n\n</code></pre>\n<!-- more -->\n\n<a id=\"二、yum方式安装git\"><h2>二、yum方式安装git</h2></a>\n<pre class='hljs'><code class=\"language-bash\">yum <span class=\"hljs-keyword\">install</span> -y git\n</code></pre>\n<a id=\"三、安装Hexo\"><h2>三、安装Hexo</h2></a>\n<pre class='hljs'><code class=\"language-bash\">cnpm install -g hexo <span class=\"hljs-keyword\">cli</span>\n</code></pre>\n<pre class='hljs'><code class=\"language-bash\">hexo <span class=\"hljs-keyword\">init</span>\n</code></pre>\n<p>启动 hexo </p>\n<pre class='hljs'><code class=\"language-bash\">hexo s   <span class=\"hljs-regexp\">//</span>hexo start 或 hexo sever 的简写\n</code></pre>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"一、安装nodejs","level":2},{"label":"二、yum方式安装git","level":2},{"label":"三、安装Hexo","level":2}],"id":"post-5"},"post-4":{"data":{"title":"Hello World","date":"2021-01-01T20:00:00.000Z"},"content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<a id=\"Quick Start\"><h2>Quick Start</h2></a>\n<a id=\"Create a new post\"><h3>Create a new post</h3></a>\n<pre class='hljs'><code class=\"language-bash\">$ hexo <span class=\"hljs-keyword\">new</span> <span class=\"hljs-string\">&quot;My New Post&quot;</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<a id=\"Run server\"><h3>Run server</h3></a>\n<pre class='hljs'><code class=\"language-bash\">$ hexo <span class=\"hljs-keyword\">server</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<a id=\"Generate static files\"><h3>Generate static files</h3></a>\n<pre class='hljs'><code class=\"language-bash\">$ hexo <span class=\"hljs-keyword\">generate</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<a id=\"Deploy to remote sites\"><h3>Deploy to remote sites</h3></a>\n<pre class='hljs'><code class=\"language-bash\"><span class=\"hljs-variable\">$ </span>hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","separator":"---","prefixSeparator":true,"directory":[{"label":"Quick Start","level":2},{"label":"Create a new post","level":3},{"label":"Run server","level":3},{"label":"Generate static files","level":3},{"label":"Deploy to remote sites","level":3}],"id":"post-4"}}